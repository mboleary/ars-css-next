/**
 * Contains styling for buttons
 */

@use "layout.scss";
@use "colors.scss";
@use 'form.scss';

$default-bg-color: #333;
$default-active-bg-color: #eee;

@mixin button-base($bg-color: transparent, $fg-color: currentColor, $border: 1, $fill: 0) {
    color: $fg-color;
    
    @if $border {
        border: 1px solid $fg-color;
        padding: (layout.$default-margin * 2);
    } @else {
        padding: (layout.$default-margin * 2) + 1;
    }
    @if $fill {
        background-color: $bg-color;
    } @else {
        background-color: transparent;
    }
}

// Default to primary for the submit and reset buttons, then secondary for everything else

button, input[type="button"], input[type="submit"], input[type="reset"], .button {
    padding: (layout.$default-margin * 2);
    font-family: medium;
    border-radius: form.$border-radius;
    border: 1px solid currentColor;

    &.primary {

    }

    &.secondary {

    }

    &.tertiary {
        
    }

    color: currentColor;
    background-color: transparent;
    &:hover {
        border-color: transparent;
        color: colors.$background-color-light;
        background-color: colors.$text-color-light;
        @media only screen and (prefers-color-scheme: dark) {
            color: colors.$background-color-dark;
            background-color: colors.$text-color-dark;
        }
        body[dark] & {
            color: colors.$background-color-dark;
            background-color: colors.$text-color-dark;
        }
    }


    @each $index, $color in colors.$accent-colors {
        .accent-#{$index} {
            border-color: $color;
            color: $color;
        }

        &:hover.accent-#{$index} {
            border-color: transparent;
            background-color: $color;
            color: colors.getTextColor($color);
        }
    }
}

input[type="reset"]:not(.primary):not(.secondary):not(.tertiary) {
    color: colors.$error-color;
}